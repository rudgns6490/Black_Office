<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="board"> 

     <!-- === 메인 페이지용 이미지 파일명 가져오기 ===  
	<select id="getImgfilenameList" resultType="String">
		select imgfilename
		from board_img_advertise
		order by imgno desc
	</select> -->
	
	
	<!-- // === 로그인 처리하기 === 
	<select id="getLoginMember" parameterType="HashMap" resultType="com.spring.member.model.MemberVO">
	    select idx, userid, name, email, gradelevel 
			 , trunc( months_between(sysdate, lastLoginDate) ) AS lastlogindategap 
			 , trunc( months_between(sysdate, lastPwdChangeDate) ) AS pwdchangegap 
		from jsp_member 
		where status = 1 and 
		      userid = #{userid} and
		      pwd = #{pwd}  
	</select>
	마지막으로 로그인 한 날짜시간 변경(기록)하기
	<update id="setLastLoginDate" parameterType="HashMap">
		update jsp_member set lastLoginDate = sysdate 
		where userid = #{userid}
	</update> -->
	
	
	=== 글쓰기(파일첨부가 없는것) ===
	<insert id="add" parameterType="com.spring.board.model.BoardVO"> 
	 	insert into tblBoard(seq, fk_userid, name, subject, content, pw, readCount, regDate, status)
		values(boardSeq.nextval, #{fk_userid}, #{name}, #{subject}, #{content}, #{pw}, default, default, default)
	</insert>
	
	
	 === 페이징 처리를 안한 검색어가 없는 전체 글목록 보여주기 ===
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO">
		select seq, fk_userid, name, subject, readcount,
		       to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		from tblBoard
		where status = 1
		order by seq desc
	</select>
	
	
	=== (댓글쓰기가 없는 게시판에서) 글1개 보여주기 === 
	<select id="getView" parameterType="String" resultType="com.spring.board.model.BoardVO">
		select previousseq, previoussubject, 
		       seq, fk_userid, name, subject, content, readCount, regDate,
		       nextseq, nextsubject 
		from 
		(
		    select lag(seq, 1) over(order by seq desc) as previousseq
		         , lag(subject, 1) over(order by seq desc) as previoussubject
		         , seq, fk_userid, name, subject, content
		         , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		         , lead(seq, 1) over(order by seq desc) as nextseq
		         , lead(subject, 1) over(order by seq desc) as nextsubject
		    from tblBoard
		    where status = 1
		) V
		where V.seq = #{seq}
	</select>
	
	
	=== 글 조회수 1증가 하기 ===
	<update id="setAddReadCount" parameterType="String">
		update tblBoard set readCount = readCount + 1 
		where status = 1 and seq = #{seq}  	
	</update> 
	
	 
	=== 글수정 및 글삭제시 암호일치 여부 알아오기 ===
	<select id="checkPW" parameterType="com.spring.board.model.BoardVO" resultType="int">
		select count(*)
		from tblBoard
		where seq = #{seq} and pw = #{pw}
	</select>
	
	
	 === 글 1개를 수정한다. ===   
	<update id="updateBoard" parameterType="com.spring.board.model.BoardVO">
		update tblBoard set subject = #{subject}
		                  , content = #{content}
		                  , regdate = sysdate
		where seq = #{seq}                   
	</update>
	

</mapper>





