<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="board"> 
<<<<<<< HEAD
	   
=======
	
	<!-- === #57. 글쓰기(파일첨부가 없는것) === -->
	<insert id="add" parameterType="com.spring.board.model.BoardVO"> 
	 	insert into tblBoard(seq, fk_userid, name, subject, content, pw, readCount, regDate, status)
		values(boardSeq.nextval, #{fk_userid}, #{name}, #{subject}, #{content}, #{pw}, default, default, default)
	</insert>
	
	
	<!--  === #61. 페이징 처리를 안한 검색어가 없는 전체 글목록 보여주기 === -->
	<!-- 
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO">
		select seq, fk_userid, name, subject, readcount,
		       to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		from tblBoard
		where status = 1
		order by seq desc
	</select> 
	-->
	
	<!-- 전체 글목록을 보여줄때 댓글이 딸린 글목록은 댓글의 갯수를 보여주도록 한다. 
	           먼저 #61. 을 주석처리하고서 아래의 작업을 한다. -->
	<!-- === #92. 페이징 처리를 안한 검색어가 없는 전체 글목록 보여줄때 딸린 댓글의 갯수도 보여주기 === -->
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO">
		select seq, fk_userid, name, subject,  
		       readcount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate,
		       commentCount
		from tblBoard
		where status = 1
	 	order by seq desc
	</select>
	
	
	
	
	<!-- === #66. (댓글쓰기가 없는 게시판에서) 글1개 보여주기 === --> 
	
	<!-- 
	<select id="getView" parameterType="String" resultType="com.spring.board.model.BoardVO">
		select previousseq, previoussubject, 
		       seq, fk_userid, name, subject, content, readCount, regDate,
		       nextseq, nextsubject 
		from 
		(
		    select lag(seq, 1) over(order by seq desc) as previousseq
		         , lag(subject, 1) over(order by seq desc) as previoussubject
		         , seq, fk_userid, name, subject, content
		         , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		         , lead(seq, 1) over(order by seq desc) as nextseq
		         , lead(subject, 1) over(order by seq desc) as nextsubject
		    from tblBoard
		    where status = 1
		) V
		where V.seq = #{seq}
	</select>  
	-->
	
	
	<!-- === #93. (댓글쓰기가 있는 게시판에서) 글 1개를 보여줄때 딸린 댓글의 갯수도 보여주기 === 
	                           먼저 위의  #66. 을 주석처리 한다. -->
	  
	 <select id="getView" parameterType="String" resultType="com.spring.board.model.BoardVO">
	 	select previousseq, previoussubject, 
		       seq, fk_userid, name, subject, content, readCount, regDate,
		       nextseq, nextsubject 
		     , commentCount
		from 
		(
		    select lag(seq, 1) over(order by seq desc) as previousseq
		         , lag(subject, 1) over(order by seq desc) as previoussubject
		         , seq, fk_userid, name, subject, content
		         , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		         , lead(seq, 1) over(order by seq desc) as nextseq
		         , lead(subject, 1) over(order by seq desc) as nextsubject
		         , commentCount
		    from tblBoard
		    where status = 1
		) V
		where V.seq = #{seq}
	 </select> 
	 
	
	
	<!-- === #67. 글 조회수 1증가 하기 === -->
	<update id="setAddReadCount" parameterType="String">
		update tblBoard set readCount = readCount + 1 
		where status = 1 and seq = #{seq}  	
	</update> 
	
	 
	<!-- === #75. 글수정 및 글삭제시 암호일치 여부 알아오기 === -->
	<select id="checkPW" parameterType="com.spring.board.model.BoardVO" resultType="int">
		select count(*)
		from tblBoard
		where seq = #{seq} and pw = #{pw}
	</select>
	
	
	<!--  === #77. 글 1개를 수정한다. === -->   
	<update id="updateBoard" parameterType="com.spring.board.model.BoardVO">
		update tblBoard set subject = #{subject}
		                  , content = #{content}
		                  , regdate = sysdate
		where seq = #{seq}                   
	</update>
	
	<!--  === #82. 글 1개를 삭제하기(우리는 update로 처리하겠다) === -->   
	<update id="deleteBoard" parameterType="com.spring.board.model.BoardVO">
		update tblBoard set status = 0
		where seq = #{seq}
	
	</update>
	
	<!--  === #90. 댓글쓰기(tblComment 테이블에 insert) === -->
	 <insert id="addComment" parameterType="com.spring.board.model.CommentVO">
    	insert into tblComment(seq, fk_userid, name, content, regDate, parentSeq, status)
        values(commentSeq.nextval, #{fk_userid}, #{name}, #{content}, default, #{parentSeq}, default)
    </insert>
	 
	 <!--  === #92. tblBoard 테이블에 commentCount 컬럼의 값을 1증가(update) === -->  
	 <update id="updateCommentCount" parameterType="String">
    	update tblBoard set commentCount = commentCount + 1 
    	where seq = #{parentSeq}
    </update>
    
    <!-- === #97. 원게시물에 딸린 댓글보여주기 === -->
    <select id="getCommentList" parameterType="String" resultType="com.spring.board.model.CommentVO"> 
	select name, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate 
     	from tblComment
     	where parentSeq = #{parentSeq}
    	order by seq desc
    </select>
    
    <!-- === #101. 원게시물에 딸린 모든 댓글들을 삭제하도록 한다. === -->
    <delete id="deleteComment" parameterType="String">
    	delete from tblComment
    	where parentSeq = #{seq}
    </delete>
    
    <!-- === #106. 페이징 처리를 안한 검색어가 있는 전체 글목록 보여주기 === -->
    <select id="boardListSearch" resultType="com.spring.board.model.BoardVO" parameterType="HashMap"> 
		select seq, fk_userid, name, subject,  
		       readcount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate,
		       commentCount
		from tblBoard
		where status = 1
	 	<if test=' searchWord != "" '>
	 		and ${searchType} like '%'|| #{searchWord} ||'%'
	 	</if>
	 	order by seq desc
    </select>
    
    
    
>>>>>>> branch 'master' of https://github.com/rudgns6490/Final_BlackOffice.git
</mapper>











